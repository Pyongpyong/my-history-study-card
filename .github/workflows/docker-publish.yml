name: Docker Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:

env:
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          : "${HOST:=0.0.0.0}"
          : "${PORT:=8000}"
          : "${CORS_ALLOW_ORIGINS:=*}"
          : "${CORS_ALLOW_ORIGIN_REGEX:=}"
          : "${FRONTEND_DIST:=/app/frontend}"
          : "${VITE_API_BASE_URL:=}"
          : "${VITE_API_PORT:=8000}"
          : "${MYSQL_HOST:=}"
          : "${MYSQL_PORT:=3306}"
          : "${MYSQL_USER:=}"
          : "${MYSQL_PASS:=}"
          : "${MYSQL_DB:=}"
          cat <<EOF > .env
          HOST=$HOST
          PORT=$PORT
          PYTHONPATH=/app
          FRONTEND_DIST=$FRONTEND_DIST
          CORS_ALLOW_ORIGINS=$CORS_ALLOW_ORIGINS
          CORS_ALLOW_ORIGIN_REGEX=$CORS_ALLOW_ORIGIN_REGEX
          VITE_API_BASE_URL=$VITE_API_BASE_URL
          VITE_API_PORT=$VITE_API_PORT
          MYSQL_HOST=$MYSQL_HOST
          MYSQL_PORT=$MYSQL_PORT
          MYSQL_USER=$MYSQL_USER
          MYSQL_PASS=$MYSQL_PASS
          MYSQL_DB=$MYSQL_DB
          EOF
        env:
          HOST: ${{ secrets.APP_HOST }}
          PORT: ${{ secrets.APP_PORT }}
          CORS_ALLOW_ORIGINS: ${{ secrets.CORS_ALLOW_ORIGINS }}
          CORS_ALLOW_ORIGIN_REGEX: ${{ secrets.CORS_ALLOW_ORIGIN_REGEX }}
          FRONTEND_DIST: ${{ secrets.FRONTEND_DIST }}
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_API_PORT: ${{ secrets.VITE_API_PORT }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASS: ${{ secrets.MYSQL_PASS }}
          MYSQL_DB: ${{ secrets.MYSQL_DB }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_REPOSITORY }}:buildcache,mode=max
